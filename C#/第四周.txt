这周主要是在做 解析cocos plist合图文件到Unity，并生成代码可用的帧动画
主要思路：
1.解析plist文件，及原有大图纹理。
2.根据plist信息及原有大图，复原小图纹理并创建sprite
3.每次更新将Image的Sprite换掉即可达到动画效果

1.cocos plist字段含义

以下以plist format=2 文件为例
1) metadata(大图信息) : format(plist类型) textureFileName(大图名称) size(大图大小)
2) frames value为各小图信息，以下简称frame
3) frame: 小图信息 key:frame value: {{115,50}},{28,24} 表示小图在大图中的起始位置(称为startPos)(左上角)(以向右为x正，向下为y正)为(115.50), size(小图大小)为 28*24
offset：裁剪后的小图相对于原小图的中心点偏移量(以向右为x正，向上为y正)
rotated: 是否旋转(顺时针旋转90度)
sourceColorRect: 裁剪后的小图在原小图上的起始位置（左上角）
sourceSize: 小图裁剪前的原大小

注意： 在不同的plist中字段的名称可能不同，但要表达的含义是相同的。

2.仅从大图裁剪出小图
1).不需要考虑偏移量
思路，新建一张2d纹理，根据startPos, size 获取像素采样区(GetPixels), 然后将采样区像素赋值到目标图对应位置上

首先，需要重新计算startPos, 原startPos以大图左上为起点，向下为y正。而方法GetPixels需要以大图左下为起点，已向上为y正。
得出：startPos x坐标保持不变，y= 大图高度-(startPosy + 采样高度)

2).小图未旋转
目标图中的(x,y) 对应采样区(x, y),逐一赋值

3).小图旋转
因小图顺时针旋转90度，则
1))采样高度宽高互换
2))目标图中的坐标(x, y) 对应采样区坐标为(y, 采样高度-1-x) 减一的原因是遍历区间为[0, 采样高度-1]

3.将拆分的小图还原为原大小
1)需要考虑偏移量
思路：像素赋值时需要把裁剪掉的透明像素加回去， 这里偏移量换算成左下角对左下角的偏移量，具体公式为 ow=offsetw + soucesizew / 2 - sizew / 2 
h = -(-offseth + sizeh/2 - sourcesizeh/2)

2) 未旋转小图
目标图中的(x,y) 对应采样区(x-ow, y-oh),逐一赋值

3) 旋转小图
1))采样高度宽高互换
2)) 目标图中的坐标(x, y) 对应采样区坐标为(y, 采样高度-1-x) 减一的原因是遍历区间为[0, 采样高度-1] ,将未旋转小图对应的x,y代入即可

4.生成Sprite即Animation
利用前两步生成的纹理创建sprite, 并将其以列表形式保留在Animation对象中

